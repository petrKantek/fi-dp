### prompt start
# Write a complex PowerShell script that changes the permissions of multiple files and directories based on user input.
### prompt end
# Function to recursively set permissions on files and directories
function Set-Permissions {
    param(
        [string]$path,
        [string]$username,
        [string]$permission
    )

    # Get the ACL of the path
    $acl = Get-Acl -Path $path

    # Create a new rule for the specified user and permission
    $rule = New-Object System.Security.AccessControl.FileSystemAccessRule($username, $permission, 'ContainerInherit, ObjectInherit', 'None', 'Allow')

    # Add the rule to the ACL
    $acl.AddAccessRule($rule)

    # Apply the modified ACL to the path
    Set-Acl -Path $path -AclObject $acl

    # Get all items (files and directories) in the current path
    $items = Get-ChildItem -Path $path

    # Recursively apply the same permissions to subdirectories
    foreach ($item in $items) {
        if ($item.PSIsContainer) {
            Set-Permissions -path $item.FullName -username $username -permission $permission
        }
    }
}

# Prompt the user for input
$directoryPath = Read-Host "Enter the directory path"
$desiredUsername = Read-Host "Enter the username for permissions"
$desiredPermission = Read-Host "Enter the desired permissions (e.g., FullControl, Modify, Read)"

# Check if the directory exists
if (Test-Path $directoryPath -PathType Container) {
    # Call the function to set permissions
    Set-Permissions -path $directoryPath -username $desiredUsername -permission $desiredPermission

    Write-Host "Permissions successfully set for $directoryPath"
} else {
    Write-Host "Directory not found: $directoryPath" -ForegroundColor Red
}