### prompt start
# Write a complex PowerShell script that executes multiple command-line programs with user-provided arguments and combines the results.
### prompt end
# Function to execute a command-line program and return the output
function Execute-CommandLineProgram {
   param(
       [string]$command,
       [string]$arguments
   )

   $process = Start-Process -NoNewWindow -Command $command -ArgumentList $arguments -PassThru
   $output = $process.StandardOutput
   $error = $process.StandardError

   if ($error -ne $null) {
       Write-Error "Error executing command: $command"
       Write-Error $error
       return $null
   }

   return $output
}

# Function to combine the results of multiple command-line programs
function Combine-CommandLineResults {
   param(
       [string]$command1,
       [string]$arguments1,
       [string]$command2,
       [string]$arguments2
   )

   $result1 = Execute-CommandLineProgram -command $command1 -arguments $arguments1
   $result2 = Execute-CommandLineProgram -command $command2 -arguments $arguments2

   if ($result1 -eq $null -or $result2 -eq $null) {
       return $null
   }

   $combinedResult = [PSCustomObject]@{
       Result1 = $result1
       Result2 = $result2
   }

   return $combinedResult
}

# Example usage
$command1 = "cmd"
$arguments1 = "/c echo Hello from command 1!"
$command2 = "powershell"
$arguments2 = "-Command Write-Host Hello from command 2!"

$combinedResult = Combine-CommandLineResults -command1 $command1 -arguments1 $arguments1 -command2 $command2 -arguments2 $arguments2

if ($combinedResult -eq $null) {
   Write-Error "Error combining results"
} else {
   Write-Output $combinedResult
}
