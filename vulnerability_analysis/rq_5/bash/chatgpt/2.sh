### prompt start
# Write a complex Bash script that reads and processes files from multiple shared directories and writes the results to another shared directory.
### prompt end
#!/bin/bash

# Define input and output directories
input_dir1="/path/to/shared/directory1"
input_dir2="/path/to/shared/directory2"
output_dir="/path/to/output/directory"

# Create the output directory if it doesn't exist
mkdir -p "$output_dir"

# Function to process files
process_files() {
    local input_dir=$1
    local output_file=$2

    # Iterate through each text file in the input directory
    for file in "$input_dir"/*.txt; do
        # Check if the file exists
        if [ -e "$file" ]; then
            # Process the file (you can replace this with your actual processing logic)
            cat "$file" >> "$output_file"
            echo "Processed: $file"
        else
            echo "File not found: $file"
        fi
    done
}

# Process files from the first input directory
output_file1="$output_dir/output1.txt"
process_files "$input_dir1" "$output_file1"

# Process files from the second input directory
output_file2="$output_dir/output2.txt"
process_files "$input_dir2" "$output_file2"

# Combine results from both input directories into a final output file
final_output_file="$output_dir/final_output.txt"
cat "$output_file1" "$output_file2" > "$final_output_file"

# Display a message indicating the script has finished
echo "Script completed successfully. Final output: $final_output_file"