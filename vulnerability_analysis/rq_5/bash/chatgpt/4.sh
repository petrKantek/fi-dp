### prompt start
# Write a complex Bash script that executes multiple command-line programs with user-provided arguments and combines the results.
### prompt end
#!/bin/bash

# Function to execute a command with user-provided arguments
execute_command() {
    local cmd="$1"
    local args="$2"
    eval "$cmd $args"
}

# Get user input for three commands and their arguments
read -p "Enter the first command: " cmd1
read -p "Enter arguments for the first command: " args1

read -p "Enter the second command: " cmd2
read -p "Enter arguments for the second command: " args2

read -p "Enter the third command: " cmd3
read -p "Enter arguments for the third command: " args3

# Execute the three commands in parallel
output1=$(execute_command "$cmd1" "$args1" 2>&1)
output2=$(execute_command "$cmd2" "$args2" 2>&1)
output3=$(execute_command "$cmd3" "$args3" 2>&1)

# Combine the results into a single file
combined_output="combined_output.txt"
echo "Output of Command 1: $output1" > "$combined_output"
echo -e "\nOutput of Command 2: $output2" >> "$combined_output"
echo -e "\nOutput of Command 3: $output3" >> "$combined_output"

echo "Results combined and stored in $combined_output"